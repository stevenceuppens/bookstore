/*******************************************************************************
* Package and license  ...
*******************************************************************************/

package books

import (
	"context"

	mgo "gopkg.in/mgo.v2"
	"gopkg.in/mgo.v2/bson"
)

/*******************************************************************************
* Imports ...
*******************************************************************************/

/*******************************************************************************
* Type definitions ...
*******************************************************************************/

// BookAPIMongo ...
type BookAPIMongo struct {
	session *mgo.Session
}

/*******************************************************************************
* Init methods ...
*******************************************************************************/

/*******************************************************************************
* Private methods ...
*******************************************************************************/

/*******************************************************************************
* Public methods ...
*******************************************************************************/

// NewBookAPIMongo ...
func NewBookAPIMongo(session *mgo.Session) *BookAPIMongo {
	return &BookAPIMongo{session}
}

// FindAll ...
func (u *BookAPIMongo) FindAll(ctx context.Context) ([]Book, error) {
	session := u.session.Copy()
	defer session.Close()

	c := session.DB("").C("books")

	var books []Book
	err := c.Find(bson.M{}).All(books)

	// return DB data
	return books, err
}
